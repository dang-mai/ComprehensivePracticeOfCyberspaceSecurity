︠739f86f9-3978-418f-82e8-a4d9ea3bfe70s︠
pubKey = [615436700291,415460700271,15508700231,846430100773,677471501215,139578302079,179168604148,789306608798,563224517265,364498233536,229056467022,670323428329,115934481316,44989786476,518624653302,149955258190,728568829281,796899516776,546782575075,178164449829,356328899658,712657799316,569303048254,223205396187,446410792374,892821584748,524144817108,132888933895,611875519857,877653387647,839906074973,35774353074]
nbit = len(pubKey)
encoded = 6020587936087
print("start")
# create a large matrix of 0's (dimensions are public key length +1)
A = Matrix(ZZ, nbit + 1, nbit + 1)
# fill in the identity matrix

for i in xrange(nbit):
    A[i, i] = 1
# replace the bottom row with your public key
for i in xrange(nbit):
    A[i, nbit] = pubKey[i]
# last element is the encoded message
A[nbit, nbit] = -int(encoded)

res = A.LLL(delta=1, algorithm='NTL:LLL')
print(res)
for i in range(0, nbit + 1):
    # print solution
    M = res.row(i).list()
    flag = True
    for m in M:
        if m != 0 and m != 1:
            flag = False
            break
    if flag:
        print('***************')
        print i, M
        #M = ''.join(str(j) for j in M)
        # remove the last bit
        #M = M[:-1]
        #M = hex(int(M, 2))[2:-1]
        #print M
︡aac97ec7-4964-4c8e-8914-a998d82c4824︡{"stdout":"start\n"}︡{"stdout":"[  0  -2  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   1   0  -1   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1  -1  -2  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1   1  -1   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0  -1  -1   0  -1   0   1   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   1   0   1   0   0   0   0  -2  -1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1  -1   0  -1   1  -1  -1   0   0   2   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1   1   0  -1   0   0   1   0  -1   0  -1   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  2  -1   2  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  2   0  -1   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0   1   1   1   0   0  -1  -1   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[ -1   0  -1   0   0   2   0   0   0   1   1   0   2   1  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1   0   1   1  -1   0   0   1   0  -1   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1   0   1   0   0  -1  -1   1   0   0   1  -1   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  1  -1   0   0   0   0   1   0  -1   0   1   0   0   1  -1  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0]\n[  0   1   0   0   0   0   0   0   0   2  -1   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0   1   1   0   0   0   1  -1   1   1   0  -1   0  -1   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   1   1   0   0  -1   0  -1   0  -1   1   0   0  -1  -1   1   0   2  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n[  0   0   0   0   0   1   1   0   1   0   0   0   1   1  -1   1   1   0  -1   0   0  -2   1   0   0   0   0   0   0   0   0   0   0]\n[  0   1   0   0   0   0   0   0   0   2  -1   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0]\n[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0]\n[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0]\n[  0   1   0   0   0   1   0   1   1   1   1  -1   0   0   0   0   0   0   0   0   0   0  -1   0   0  -2   1   0   0   0   0   0   0]\n[  0   1   0   0   0   0   0   0   0   2  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0   0   0   0]\n[  0  -1   0   0   0   0   0   0   0  -2   1   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0  -2   1   0   0   0   0]\n[  0   1   0   0   0   0   0   0   0   2  -1   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   0   0   0  -2   1   0   0   0]\n[  0   1   0   0   0   0   0   0   0   2  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -2   1   0   0]\n[  1   1   1   0   1   0  -1   1   0   1   1   0   0   1   1   1   0   1   0   1   0   0   1   1   0   0   0   0   1   0   0   0   0]\n[  2   0  -1   0   0   1  -1   0   0   0  -1   0   1   0   1  -1   0   1   1  -1   0   0   0  -1   0   1   0  -1  -1  -1  -2   1   0]\n[  0  -1   0  -1   0  -1   1  -1   0   1   0   1   1   1   0  -1   1   0  -1  -1   0  -1   0   0   0  -1   0  -1   0   1   2   4   1]\n[ -1  -1  -1   0   0  -1   0   0   1   0  -1  -1   0   0   1   0   0   0   0   1   0   0  -1   0  -1   0  -1   0   1   1   1   1 -12]"}︡{"stdout":"\n"}︡{"done":true}
        









